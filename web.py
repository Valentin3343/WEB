import streamlit as st
from streamlit_option_menu import option_menu
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from labs.lab1 import lab1
from labs.lab2 import lab2
from labs.lab3 import lab3
from labs.lab4 import lab4
from labs.lab5 import lab5
from labs.lab6 import lab6
from labs.lab7 import lab7

st.set_page_config(page_title="Лабораторні роботи")


labs = [
    {
        'name': '**Лабораторна робота №1**',
        'description': '''
        ##### Опис:
        Програма надає можливість користувачеві виконати три різні завдання:
        1. **Завдання 1**: Користувач вводить значення параметра \( a \), і програма обчислює значення виразу, показуючи результат у вигляді математичної формули. 

        2. **Завдання 2**: Користувач вводить кількість годин, і програма обчислює кількість амеб через ці години, \( n \) — кількість годин.  

        3. **Завдання 3**: Користувач вводить кількість елементів списку. Програма генерує список випадкових чисел від -100 до 100, знаходить від'ємні елементи, визначає максимальний від'ємний елемент і обчислює середнє арифметичне елементів з парними індексами списку.
        ''',
        'put': lab1.lab1,
        "video_link": "https://youtu.be/dLOtT0IHJqA",
    },

    {
        'name': '**Лабораторна робота №2**',
        'description': '''
        ##### Опис:
        Програма генерує список із 8 випадкових чисел у діапазоні від -100 до 100.  
        1. За допомогою функції знаходяться 5 найбільших елементів зі списку.  
        2. Виводиться початковий список та знайдені елементи.  
        3. Передбачена можливість оновити значення списку за допомогою кнопки "Оновити".
        ''',
        'put': lab2.lab2,
        "video_link": "https://youtu.be/pUR-ZA9s-zI",
    },

    {
        'name': '**Лабораторна робота №3**',
        'description': '''
        ##### Опис:  
        Програма реалізує функціонал для керування групами студентів за допомогою файлів. 
        Користувач може виконувати такі операції:  

        1. **Створити групу**:  
            - Користувач вводить назву нової групи (наприклад, 11-KI).  
            - Створюється новий текстовий файл для збереження даних групи.  

        2. **Додати студента**:  
            - Користувач вибирає групу зі списку.  
            - Вводить прізвище студента та його середній бал.  
            - Дані студента додаються у відповідний файл групи.  

        3. **Переглянути студентів**:  
            - Користувач вибирає групу, щоб переглянути список студентів.  
            - Дані студентів відображаються у форматі: номер, прізвище студента та середній бал.  

        4. **Видалити студента**:  
            - Користувач вибирає групу та студента зі списку для видалення.  
            - Студент видаляється з файлу групи.  ''',
        'put': lab3.lab3,
        "video_link": "https://youtu.be/9kEyie5nC1U",
    },

    {
        'name': '**Лабораторна робота №4**',
        'description': '''
        ##### Опис:  
        Програма реалізує функціонал для керування групами студентів за допомогою файлів. 
        Користувач може виконувати такі операції:  

        1. **Створити групу**:  
            - Користувач вводить назву нової групи (наприклад, 11-KI).  
            - Створюється новий текстовий файл для збереження даних групи.  

        2. **Додати студента**:  
            - Користувач вибирає групу зі списку.  
            - Вводить прізвище студента та його середній бал.  
            - Дані студента додаються у відповідний файл групи.  

        3. **Переглянути студентів**:  
            - Користувач вибирає групу, щоб переглянути список студентів.  
            - Дані студентів відображаються у форматі: номер, прізвище студента та середній бал.  

        4. **Видалити студента**:  
            - Користувач вибирає групу та студента зі списку для видалення.  
            - Студент видаляється з файлу групи.  ''',
        'put': lab4.lab4,
        "video_link": "https://youtu.be/bROk9P-yW4M",
    },

    {
        'name': '**Лабораторна робота №5**',
        'description': '''
        ##### Опис:
        Створення інтерактивного словника для збереження перекладів слів із англійської мови на українську.  

        Користувач має можливість виконати одну з чотирьох дій:
        1. **Додати переклад**:  
            - Введення англійського слова та його перекладу.  
            - Якщо слово вже існує у словнику, новий переклад додається до списку перекладів.  
            - Всі зміни зберігаються у сесії для збереження даних під час роботи програми.

        2. **Знайти переклади**:  
            - Пошук перекладів для конкретного англійського слова.  
            - Якщо слово знайдено, відображається список перекладів.  
            - Якщо слова немає у словнику, користувач отримує відповідне повідомлення.

        3. **Показати весь словник**:  
            - Виведення вмісту словника у зручному форматі.  
            - Слова та їх переклади відображаються як "англійське слово: список перекладів".  
            - Якщо словник порожній, програма повідомляє користувача.

        4. **Очистити словник**:  
            - Повне очищення словника від усіх записів.  
            - Підтвердження успішного видалення.''',
        'put': lab5.lab5,
        "video_link": "https://youtu.be/N1O_lW5aGao",
    },

    {
        'name': '**Лабораторна робота №6**',
        'description': '''
        ##### Опис:
        Програма, яка аналізує вміст вебсторінки за введеним користувачем URL. Програма має обчислювати статистику слів, HTML-тегів, а також кількість посилань і зображень на сторінці.
        ''',
        'put': lab6.lab6,
        "video_link": "https://youtu.be/j92FecHBOFM",
    },

    {
        'name': '**Лабораторна робота №7**',
        'description': '''
        ##### Опис:
        Користувач може виконувати такі операції:  

        1. **Побудова графіка функції:**  
            - Відображає графік математичної функції у заданому інтервалі [1, 10].

        2. **Аналіз частоти літер у тексті:**  
            - Користувач вводить текст, і програма рахує частоту кожної літери. Результат візуалізується у вигляді гістограми.

        3. **Аналіз типів речень у тексті:**  
            - Програма визначає кількість звичайних, питальних, окличних речень і трикрапок у введеному тексті. Результат також відображається у вигляді гістограми.''',
        'put': lab7.lab7,
        "video_link": "https://youtu.be/vayOZk1n61Y",
    },
]


with st.sidebar:
    page = option_menu(
        menu_title="",
        options=["Головна", "Про мене", "Зворотній зв'язок"],
        icons=["house", "person", "envelope"],
        menu_icon="cast",
        default_index=0,
    )

if "video_states" not in st.session_state:
    st.session_state.video_states = [False] * len(labs)

if "description_states" not in st.session_state:
    st.session_state.description_states = [False] * len(labs)


if page == "Головна":
    st.title("Лабораторні роботи")
    st.header("Список лабораторних робіт")

    for idx, lab in enumerate(labs):
        with st.expander(lab["name"]):
            
            if st.button(f"Переглянути опис", key=f"_description_{idx}"):
                st.session_state.description_states[idx] = not st.session_state.description_states[idx]

            if st.session_state.description_states[idx]:
                st.write(lab["description"])

            if st.button(f"Переглянути відео", key=f"_video_{idx}"):
                st.session_state.video_states[idx] = not st.session_state.video_states[idx]

            if st.session_state.video_states[idx]:
                st.subheader("Відео лабораторної роботи:")
                st.video(lab["video_link"])

            lab['put']()


elif page == "Про мене":
    st.header("Про мене")
    text = '''
    Я Жук Валентин. Студент 21-КІ групи.

    Навчаюсь в "Відокремлений структурний підрозділ «Фаховий коледж Чернівецького національного університету імені Юрія Федьковича»".
    '''
    st.markdown(text)

elif page == "Зворотній зв'язок":
    st.header("Зворотній зв'язок")
    st.write("Відправте свої запитання або пропозиції.")

    name = st.text_input("Ваше ім'я:")
    email = st.text_input("Ваш email:")
    message = st.text_area("Повідомлення:")

    if st.button("Надіслати повідомлення"):
        if name and email and message:
            try:
                sender_email = "web.zhuk.valentyn@gmail.com"
                sender_password = "xltl dvpf updc thjm"
                recipient_email = "zhuk.valentyn.clg@chnu.edu.ua"

                msg = MIMEMultipart()
                msg["From"] = sender_email
                msg["To"] = recipient_email
                msg["Subject"] = f"Повідомлення від {name}"

                body = f"Ім'я: {name}\nEmail: {email}\n\nПовідомлення:\n{message}"
                msg.attach(MIMEText(body, "plain"))

                with smtplib.SMTP("smtp.gmail.com", 587) as server:
                    server.starttls()
                    server.login(sender_email, sender_password)
                    server.sendmail(sender_email, recipient_email, msg.as_string())

                st.success("Повідомлення успішно надіслано!")
            except Exception as e:
                st.error(f"Сталася помилка: {e}")
        else:
            st.error("Будь ласка, заповніть усі поля!")

